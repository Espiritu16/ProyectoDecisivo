/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.Admin.Direcciones;

import Controlador.PatronFactory.CrearDAOFactory;
import Controlador.PatronFactory.CrearEntidadFactoryImpl;
import Modelo.PatronObserver.BotonObservador;
import Modelo.PatronObserver.Formulario;
import Modelo.Servicios.Prototype.PrototypeCentroReciclaje;
import Modelo.Sugerencias.Prototype.PrototypeNotificacion;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author sankef
 */
public class registrarDireccion extends javax.swing.JFrame {
    
         private Formulario formulario;
        
    /**
     * Creates new form enviarNotificacion
     */
    
    public registrarDireccion() {
        initComponents();
        setLocationRelativeTo(null);  // Centra la ventana

        // Inicializamos el formulario
        formulario = new Formulario();

        // Crear el observador para el botón de enviar
        BotonObservador botonObservador = new BotonObservador(btnCrearDireccion);
        formulario.agregarObservador(botonObservador);  // Registrar el botón como observador

        // Validar los campos al agregar CaretListener
        camposFormulario();
        
        txtPais.setText("Peru");
        txtPais.setEnabled(false);
        txtCiudad.setText("Lima");
        txtCiudad.setEnabled(false);
        txtTelefono.setText("123456789");
        txtTelefono.setEnabled(false);
        
    }
    
        // Método para añadir CaretListeners a los campos
    public void camposFormulario() {
        txtNombre.addCaretListener(e -> actualizarEstadoFormulario());
        txtDireccion.addCaretListener(e -> actualizarEstadoFormulario());
        txtCiudad.addCaretListener(e -> actualizarEstadoFormulario());
        txtTelefono.addCaretListener(e -> actualizarEstadoFormulario());
        txtCodigo.addCaretListener(e -> actualizarEstadoFormulario());
        comboHorario.addActionListener(e -> actualizarEstadoFormulario());
    }

    // Actualizar el estado del formulario cada vez que un campo cambie
    public void actualizarEstadoFormulario() {
        // Verifica que todos los campos estén llenos y sean válidos
        boolean formularioCompleto = 
            !txtNombre.getText().isEmpty() && // El nombre no está vacío
            esNombreValido(txtNombre.getText()) && // El nombre es válido (puede tener espacios y números)
            !txtDireccion.getText().isEmpty() && // La dirección no está vacía
            esDireccionValida(txtDireccion.getText()) && // Dirección válida (puede tener espacios y números)
            !txtCiudad.getText().isEmpty() && // La ciudad no está vacía
            esCiudadValida(txtCiudad.getText()) && // Ciudad válida (solo letras y espacios)
            !txtTelefono.getText().isEmpty() && // El teléfono no está vacío
            esTelefonoValido(txtTelefono.getText()) && // Teléfono válido (solo números)
            !txtCodigo.getText().isEmpty() && // El código postal no está vacío
            esCodigoPostalValido(txtCodigo.getText()) && // Código postal válido (solo números)
            comboHorario.getSelectedIndex() != 0;  // Verifica que se haya seleccionado un canal (horario)

        // Notificar el estado actualizado del formulario a los observadores (botones)
        formulario.setFormularioCompleto(formularioCompleto);  // Cambia el estado del formulario y notifica a los observadores
    }

    // Métodos de validación para cada campo

    // Validar nombre (puede contener números y espacios)
    private boolean esNombreValido(String texto) {
        return texto.matches("^[a-zA-Z0-9 ]+$");  // Solo letras, números y espacios
    }

    // Validar dirección (puede contener números y espacios)
    private boolean esDireccionValida(String texto) {
        return texto.matches("^[a-zA-Z0-9 ]+$");  // Solo letras, números y espacios
    }

    // Validar ciudad (solo letras y espacios)
    private boolean esCiudadValida(String texto) {
        return texto.matches("^[a-zA-Z ]+$");  // Solo letras y espacios
    }

    // Validar teléfono (solo números y exactamente 9 caracteres)
    private boolean esTelefonoValido(String texto) {
        return texto.matches("^[0-9]{9}$");  // Solo números y exactamente 9 caracteres
    }

    // Validar código postal (solo números)
    private boolean esCodigoPostalValido(String texto) {
        return texto.matches("^[0-9]+$");  // Solo números
    }

   
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnCrearDireccion = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Distrito = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtCiudad = new javax.swing.JTextField();
        txtDistrito = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtPais = new javax.swing.JTextField();
        comboHorario = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setText("Enviar Notificación");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 15, -1, -1));

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Direccion:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 110, 30));

        btnCrearDireccion.setBackground(new java.awt.Color(153, 255, 153));
        btnCrearDireccion.setText("Crear Direccion");
        btnCrearDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearDireccionActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrearDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 160, 40));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Nombre:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 110, 30));

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Ciudad");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 110, 30));

        Distrito.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        Distrito.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Distrito.setText("Distrito");
        jPanel1.add(Distrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 110, 30));

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Codigo Postal");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 110, 30));

        jLabel10.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Pais");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 110, 30));

        jLabel11.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Telefono");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 110, 30));

        jLabel12.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Horario Atencion");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 120, 30));

        txtCodigo.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jPanel1.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 250, 30));

        txtNombre.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 140, 30));

        txtDireccion.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 140, 30));

        txtCiudad.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jPanel1.add(txtCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 140, 30));

        txtDistrito.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jPanel1.add(txtDistrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 140, 30));

        txtTelefono.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 140, 30));

        txtPais.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        jPanel1.add(txtPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 140, 30));

        comboHorario.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        comboHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Lunes a Miercoles 9:00 a 18:00PM", "Lunes a Jueves 9:00 a 14:00PM", "Martes a Viernes 9:00 a 15:00PM", "Miercoles a Sabado 9:00 a 16:00PM", "Viernes a Sabado 9:00 a 17:00PM", "Sabado a Domingo 9:00 a 15:00PM" }));
        jPanel1.add(comboHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 250, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearDireccionActionPerformed
       // Obtener los datos del formulario
        String nombre = txtNombre.getText();  // Obtener el nombre
        String direccion = txtDireccion.getText();  // Obtener la dirección
        String ciudad = txtCiudad.getText();  // Obtener la ciudad
        String distrito = txtDistrito.getText();  // Obtener el distrito
        String codigoPostal = txtCodigo.getText();  // Obtener el código postal
        String pais = txtPais.getText();  // Obtener el país
        String telefono = txtTelefono.getText();  // Obtener el teléfono
        String horarioAtencion = (String) comboHorario.getSelectedItem();  // Obtener el horario de atención

        // Validar que los campos no estén vacíos
        if (nombre.isEmpty() || direccion.isEmpty() || ciudad.isEmpty() || distrito.isEmpty() ||
            codigoPostal.isEmpty() || pais.isEmpty() || telefono.isEmpty() || horarioAtencion == null) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear la instancia de PrototypeCentroReciclaje
        PrototypeCentroReciclaje centroReciclaje = new PrototypeCentroReciclaje();
        centroReciclaje.setNombre(nombre);
        centroReciclaje.setDireccion(direccion);
        centroReciclaje.setCiudad(ciudad);
        centroReciclaje.setDistrito(distrito);
        centroReciclaje.setCodigoPostal(codigoPostal);
        centroReciclaje.setPais(pais);
        centroReciclaje.setTelefono(telefono);
        centroReciclaje.setHorarioAtencion(horarioAtencion);

        // Usar el Factory para crear el centro de reciclaje en la base de datos
        CrearDAOFactory factory = new CrearEntidadFactoryImpl();
        int idGenerado = factory.crearCentroReciclaje(centroReciclaje);  // Llamamos al método DAO para crear el centro

        // Verificar si la creación fue exitosa
        if (idGenerado != -1) {
            // Limpiar los campos después de la inserción
            txtNombre.setText("");
            txtDireccion.setText("");
            txtDistrito.setText("");
            txtCodigo.setText("");
            comboHorario.setSelectedIndex(0); // Opcional, si tienes un valor por defecto
        } else {
            JOptionPane.showMessageDialog(this, "Hubo un error al registrar el centro de reciclaje. Intenta nuevamente.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCrearDireccionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registrarDireccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registrarDireccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registrarDireccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registrarDireccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registrarDireccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Distrito;
    private javax.swing.JButton btnCrearDireccion;
    private javax.swing.JComboBox<String> comboHorario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDistrito;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPais;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

  
    

}
