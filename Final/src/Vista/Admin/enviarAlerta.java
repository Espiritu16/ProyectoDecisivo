/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista.Admin;

import Controlador.PatronFactory.CrearDAOFactory;
import Controlador.PatronFactory.CrearEntidadFactoryImpl;
import Modelo.Observer.BotonObservador;
import Modelo.Observer.Formulario;
import Modelo.ServiciosPrototype.PrototypeAlerta;
import Modelo.SugerenciasPrototype.PrototypeNotificacion;
import javax.swing.JOptionPane;

/**
 *
 * @author sankef
 */
public class enviarAlerta extends javax.swing.JFrame {
    
         private Formulario formulario;
        
    /**
     * Creates new form enviarNotificacion
     */
    
    public enviarAlerta() {
        initComponents();
        setLocationRelativeTo(null);  // Centra la ventana

        // Inicializamos el formulario
        formulario = new Formulario();

        // Crear el observador para el botón de enviar
        BotonObservador botonObservador = new BotonObservador(btnEnviarAlerta);
        formulario.agregarObservador(botonObservador);  // Registrar el botón como observador
        btnEnviarAlerta.setEnabled(false);
        // Validar los campos al agregar CaretListener
        camposAlerta();
        
    }
    
     // Método para añadir CaretListeners a los campos
     public void camposAlerta() {
         txtAlerta.addCaretListener(e -> actualizarEstadoFormulario());
     }

     // Actualizar el estado del formulario cada vez que el campo txtAlerta cambie
     public void actualizarEstadoFormulario() {
         // Verifica que el campo de alerta no esté vacío
         boolean formularioCompleto = !txtAlerta.getText().isEmpty();

         // Notificar el estado actualizado del formulario a los observadores (botones)
         formulario.setFormularioCompleto(formularioCompleto);  // Cambia el estado del formulario y notifica a los observadores
     }

    
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnEnviarAlerta = new javax.swing.JButton();
        txtAlerta = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setText("Enviar Alerta");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        btnEnviarAlerta.setBackground(new java.awt.Color(153, 255, 153));
        btnEnviarAlerta.setText("Enviar Notificacion");
        btnEnviarAlerta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarAlertaActionPerformed(evt);
            }
        });
        jPanel1.add(btnEnviarAlerta, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 400, 160, 40));

        txtAlerta.setColumns(20);
        txtAlerta.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        txtAlerta.setRows(5);
        txtAlerta.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(txtAlerta, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 350, 190));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarAlertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarAlertaActionPerformed
         // Obtener el mensaje de la alerta del campo de texto
         String mensaje = txtAlerta.getText();  // Obtener el mensaje de la alerta

         // Validar que el campo de alerta no esté vacío
         if (mensaje.isEmpty()) {
             JOptionPane.showMessageDialog(this, "Por favor, ingrese el mensaje de la alerta.", "Error", JOptionPane.ERROR_MESSAGE);
             return;
         }

         // Crear la instancia de PrototypeAlerta
         PrototypeAlerta alerta = new PrototypeAlerta();
         alerta.setMensaje(mensaje);
         alerta.setEstadoAlerta("No leída");  // El estado inicial

         // Llamar al DAO para crear la alerta para todos los usuarios
         CrearDAOFactory factory = new CrearEntidadFactoryImpl();
         int idGenerado = factory.crearAlerta(alerta);  // Usamos el método DAO para crear la alerta para todos los usuarios

         // Verificar si la alerta fue enviada correctamente
         if (idGenerado != -1) {
             JOptionPane.showMessageDialog(this, "Alerta enviada a todos los usuarios con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
         } else {
             JOptionPane.showMessageDialog(this, "Hubo un error al enviar la alerta. Intenta nuevamente.", "Error", JOptionPane.ERROR_MESSAGE);
         }

         // Cerrar la ventana después de enviar la alerta
         this.dispose();  // Cerrar la ventana de alerta después de enviarla
    }//GEN-LAST:event_btnEnviarAlertaActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(enviarAlerta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(enviarAlerta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(enviarAlerta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(enviarAlerta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new enviarAlerta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviarAlerta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextArea txtAlerta;
    // End of variables declaration//GEN-END:variables

    

}
