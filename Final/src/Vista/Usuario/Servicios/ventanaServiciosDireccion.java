package Vista.Usuario.Servicios;


import Modelo.PatronSingleton.ConexionSingleton;
import Modelo.PatronSingleton.MantenerSession;
import java.sql.*;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sankef
 */
public class ventanaServiciosDireccion extends javax.swing.JPanel {
    
 
    

    /**
     * Creates new form VentanaRegistro
     */
    public ventanaServiciosDireccion() {
        
        initComponents();
        //guardar el usuario logeado
       cargarCentrosReciclaje(tablaDireccion);
       cargarAlertas(tablaAlertas);
    }
    public void cargarCentrosReciclaje(JTable tabla) {
            DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Dirección");
        model.addColumn("Distrito");
        model.addColumn("Horario de Atención");
        model.addColumn("Teléfono");
        

        try (Connection conn = ConexionSingleton.getConexion()) {
            // Consulta para obtener las direcciones de los centros de reciclaje
            String sql = "SELECT direccion, distrito, telefono, horario_atencion " +
                         "FROM CentroReciclaje";  // Consulta para cargar solo los campos seleccionados

            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            // Iterar sobre los resultados y agregar las filas a la tabla
            while (rs.next()) {
                model.addRow(new Object[]{       // Obtener el nombre del centro
                    rs.getString("direccion"),    // Obtener la dirección
                    rs.getString("distrito"),     // Obtener el distrito
                    rs.getString("horario_atencion"), // Obtener el horario de atención
                    rs.getString("telefono"),     // Obtener el teléfono
                    
                });
            }

            // Establecer el modelo de la tabla con los datos obtenidos
            tabla.setModel(model);
            tabla.setDefaultEditor(Object.class, null);  // Deshabilitar la edición

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    public void cargarAlertas(JTable tabla) {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Mensaje");
    model.addColumn("Fecha Alerta");
    model.addColumn("Estado");

    // Obtener el correo del usuario desde la sesión activa
    MantenerSession sessionManager = MantenerSession.getInstance();
    String correoUsuario = sessionManager.getCorreo();  // Obtener el correo del usuario logueado

    try (Connection conn = ConexionSingleton.getConexion()) {
        // Iniciar una transacción
        conn.setAutoCommit(false);  // Deshabilitamos el auto-commit para poder hacer múltiples operaciones

        // Consulta para obtener las alertas relacionadas con el usuario logueado
        String sql = "SELECT a.idAlerta, a.mensaje, a.fechaAlerta, a.estadoAlerta " +
                     "FROM Alertas a " +
                     "JOIN Usuario u ON a.idUsuario = u.idUsuario " +
                     "WHERE u.correo = ?";  // Filtramos las alertas por el correo del usuario

        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, correoUsuario);  // Usar el correo obtenido de la sesión

        ResultSet rs = stmt.executeQuery();

        // Iterar sobre los resultados y agregar las filas a la tabla
        while (rs.next()) {
            // Actualizamos el estado de la alerta a "Leída"
            String updateSql = "UPDATE Alertas SET estadoAlerta = 'Leída' WHERE idAlerta = ?";
            PreparedStatement updateStmt = conn.prepareStatement(updateSql);
            updateStmt.setInt(1, rs.getInt("idAlerta"));
            updateStmt.executeUpdate();  // Ejecutar la actualización

            model.addRow(new Object[]{
                rs.getString("mensaje"),        // Obtener el mensaje de la alerta
                rs.getTimestamp("fechaAlerta"), // Obtener la fecha de la alerta
                "Leída"                          // El estado será "Leída"
            });
        }

        // Confirmar los cambios en la base de datos
        conn.commit();  // Commit para guardar las actualizaciones de estado

        // Establecer el modelo de la tabla con los datos obtenidos
        tabla.setModel(model);
        tabla.setDefaultEditor(Object.class, null);  // Deshabilitar la edición de la tabla

    } catch (SQLException ex) {
        ex.printStackTrace();
        
    }
}
    
 
   
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabGeneral = new javax.swing.JTabbedPane();
        tabDireccion = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDireccion = new javax.swing.JTable();
        tabAlerta = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaAlertas = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(700, 400));
        setMinimumSize(new java.awt.Dimension(700, 400));
        setPreferredSize(new java.awt.Dimension(700, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabGeneral.setBackground(new java.awt.Color(153, 255, 153));
        tabGeneral.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        tabGeneral.setMaximumSize(new java.awt.Dimension(700, 400));
        tabGeneral.setMinimumSize(new java.awt.Dimension(700, 400));

        tabDireccion.setBackground(new java.awt.Color(255, 204, 204));
        tabDireccion.setMaximumSize(new java.awt.Dimension(700, 400));
        tabDireccion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaDireccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaDireccion);

        tabDireccion.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 420));

        tabGeneral.addTab("Direccion Centros de Reciclaje", tabDireccion);

        tabAlerta.setBackground(new java.awt.Color(255, 204, 204));
        tabAlerta.setMaximumSize(new java.awt.Dimension(700, 400));
        tabAlerta.setMinimumSize(new java.awt.Dimension(700, 400));
        tabAlerta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaAlertas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaAlertas);

        tabAlerta.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 410));

        tabGeneral.addTab("Alertas", tabAlerta);

        add(tabGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 450));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel tabAlerta;
    private javax.swing.JPanel tabDireccion;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JTable tablaAlertas;
    private javax.swing.JTable tablaDireccion;
    // End of variables declaration//GEN-END:variables

   
   
}
